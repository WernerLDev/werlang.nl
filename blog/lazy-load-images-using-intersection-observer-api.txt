1:HL["/_next/static/media/0e790e04fd40ad16-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/49f4cfff319a50c8.css",{"as":"style"}]
0:["ni5Aw3T7LhAxInfJ4BoD1",[[["",{"children":["blog",{"children":[["slug","lazy-load-images-using-intersection-observer-api","d"],{"children":["__PAGE__?{\"slug\":\"lazy-load-images-using-intersection-observer-api\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/49f4cfff319a50c8.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":610,"chunks":["685:static/chunks/685-37ac10ae36ac1df4.js","42:static/chunks/42-848b4eaec61c5015.js","185:static/chunks/app/layout-b7b76cbc4672a2f5.js"],"name":"Providers","async":false}
6:I{"id":9037,"chunks":["685:static/chunks/685-37ac10ae36ac1df4.js","42:static/chunks/42-848b4eaec61c5015.js","185:static/chunks/app/layout-b7b76cbc4672a2f5.js"],"name":"HtmlWithTheme","async":false}
7:I{"id":2243,"chunks":["685:static/chunks/685-37ac10ae36ac1df4.js","42:static/chunks/42-848b4eaec61c5015.js","185:static/chunks/app/layout-b7b76cbc4672a2f5.js"],"name":"Navigation","async":false}
8:I{"id":7767,"chunks":["272:static/chunks/webpack-47b150e74d33bad8.js","971:static/chunks/fd9d1056-d14c2ed43eb473b3.js","596:static/chunks/596-7a79afd8655e8bf5.js"],"name":"default","async":false}
9:I{"id":7920,"chunks":["272:static/chunks/webpack-47b150e74d33bad8.js","971:static/chunks/fd9d1056-d14c2ed43eb473b3.js","596:static/chunks/596-7a79afd8655e8bf5.js"],"name":"default","async":false}
c:I{"id":6685,"chunks":["685:static/chunks/685-37ac10ae36ac1df4.js","308:static/chunks/app/blog/[slug]/page-495e04ca657cb100.js"],"name":"","async":false}
b:T116f,<p>If you want to lazy load an image or have a fade-in animation when things are scrolled into view you could listen to the scroll-event and do all the calculations yourself. But this is a huge pain in the ass. Since 2018 we can use the <a href="https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver">Intersection Observer API</a> which makes this much easier.</p>
<p>Here is a simple example with React and TypeScript:</p>
<pre><code class="hljs language-typescript"><span class="hljs-keyword">import</span> { useEffect, useRef, useState } <span class="hljs-keyword">from</span> <span class="hljs-string">"react"</span>;

<span class="hljs-keyword">export</span> <span class="hljs-keyword">type</span> <span class="hljs-title class_">LazyImageProps</span> = {
  <span class="hljs-attr">src</span>: <span class="hljs-built_in">string</span>;
  <span class="hljs-attr">alt</span>: <span class="hljs-built_in">string</span>;
};

<span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-title function_">LazyImage</span> = (<span class="hljs-params">{ src, alt }: LazyImageProps</span>) => {
  <span class="hljs-keyword">const</span> imgRef = useRef&#x3C;<span class="hljs-title class_">HTMLElement</span> | <span class="hljs-literal">null</span>>(<span class="hljs-literal">null</span>);
  <span class="hljs-keyword">const</span> [showImg, setShowImg] = <span class="hljs-title function_">useState</span>(<span class="hljs-literal">false</span>);

  <span class="hljs-title function_">useEffect</span>(<span class="hljs-function">() =></span> {
    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onObserve</span> = (<span class="hljs-params">
      entries: IntersectionObserverEntry[],
      observer: IntersectionObserver
    </span>) => {
      entries.<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">entry</span>) =></span> {
        <span class="hljs-keyword">if</span> (entry.<span class="hljs-property">isIntersecting</span>) {
          <span class="hljs-title function_">setShowImg</span>(<span class="hljs-literal">true</span>);
          imgRef.<span class="hljs-property">current</span> &#x26;&#x26; observer.<span class="hljs-title function_">unobserve</span>(imgRef.<span class="hljs-property">current</span>);
        }
      });
    };

    <span class="hljs-keyword">const</span> observer = <span class="hljs-keyword">new</span> <span class="hljs-title class_">IntersectionObserver</span>(onObserve);
    imgRef.<span class="hljs-property">current</span> &#x26;&#x26; observer.<span class="hljs-title function_">observe</span>(imgRef.<span class="hljs-property">current</span>);

    <span class="hljs-keyword">return</span> <span class="hljs-function">() =></span> observer.<span class="hljs-title function_">disconnect</span>();
  });

  <span class="hljs-keyword">return</span> (
    <span class="xml"><span class="hljs-tag">&#x3C;<span class="hljs-name">img</span>
      <span class="hljs-attr">ref</span>=<span class="hljs-string">{(ref)</span> =></span> (imgRef.current = ref)}
      src={showImg ? src : ""}
      alt={alt}
    /></span>
  );
};
</code></pre>
<p>Here I am setting the src-attribute when the image gets scrolled into view, but you could also set a className that triggers a CSS animation.</p>
<p>Want to trigger it before it is completely scrolled into view, or even right before it becomes visible? Set some options:</p>
<pre><code class="hljs language-typescript"><span class="hljs-keyword">const</span> <span class="hljs-attr">options</span>: <span class="hljs-title class_">IntersectionObserverInit</span> = {
  <span class="hljs-attr">rootMargin</span>: <span class="hljs-string">"100px"</span>,
  <span class="hljs-attr">threshold</span>: [<span class="hljs-number">0</span>, <span class="hljs-number">0.25</span>, <span class="hljs-number">0.5</span>, <span class="hljs-number">1</span>],
};

<span class="hljs-comment">// pass the object to the constructor of IntersectionObserver</span>
<span class="hljs-keyword">const</span> observer = <span class="hljs-keyword">new</span> <span class="hljs-title class_">IntersectionObserver</span>(onObserve, options);
</code></pre>
<p>rootMargin sets a margin of 100px around the image, and with threshold you can make it trigger multiple times. 1 means when the image is 100% visible, 0.5 means only half of the image is visible.</p>3:[null,["$","$L5",null,{"children":["$","$L6",null,{"children":["$","body",null,{"className":"__className_ddabd7","children":[["$","div",null,{"className":"fluid-container page-wrapper","children":[["$","$L7",null,{"menuItems":[{"path":"/","label":"Home"},{"path":"/about","label":"About"},{"path":"/blog","label":"Blog"}]}],["$","$L8",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L8",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L8",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children",["slug","lazy-load-images-using-intersection-observer-api","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$La",["$","div",null,{"className":"container py-5 lh-lg","children":["$","div",null,{"className":"row","children":[["$","div",null,{"className":"col-0 col-lg-2"}],["$","div",null,{"className":"col-12 col-lg-8 px-3","children":[[["$","h1",null,{"className":"mb-2","children":"Lazy load images using IntersactionObserver API"}],["$","time",null,{"dateTime":"2023-12-31","children":["Published at: ","31 December 2023"]}],["$","div",null,{"className":"mt-4","dangerouslySetInnerHTML":{"__html":"$b"}}]],["$","$Lc",null,{"href":"/blog","children":"Back to overview"}]]}],["$","div",null,{"className":"col-0 col-lg-2"}]]}]}],null],"segment":"__PAGE__?{\"slug\":\"lazy-load-images-using-intersection-observer-api\"}"},"styles":[]}],"segment":["slug","lazy-load-images-using-intersection-observer-api","d"]},"styles":[]}],"segment":"blog"},"styles":[]}]]}],["$","footer",null,{"className":"container-fluid px-3 px-lg-5 footer z-3","children":["$","div",null,{"className":"d-lg-flex justify-content-between","children":[["$","small",null,{"children":["$","span",null,{"children":["Copyright Â© ","2024"," - Werner Langenhuisen",["$","a",null,{"href":"https://github.com/WernerLDev/werlang.nl","target":"_blank","rel":"noreferrer","className":"ps-3 d-none d-lg-inline","children":"View source"}]]}]}],["$","div",null,{"className":"fs-5 d-flex d-lg-block justify-content-between","children":[["$","small",null,{"children":["$","a",null,{"href":"https://github.com/WernerLDev/werlang.nl","target":"_blank","rel":"noreferrer","className":"pe-3 d-inline d-lg-none","children":"View source"}]}],["$","span",null,{"children":[["$","a",null,{"rel":"author","href":"https://github.com/WernerLDev/","children":["$","i",null,{"className":"bi bi-github"}]}]," ",["$","a",null,{"rel":"author","href":"https://www.linkedin.com/in/wernerl/","children":["$","i",null,{"className":"bi bi-linkedin"}]}]]}]]}]]}]}]]}]}]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Lazy load images using IntersactionObserver API | werlang.nl"}],["$","meta","2",{"name":"description","content":"Personal website of Werner"}],["$","meta","3",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","link","4",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}],["$","link","5",{"rel":"icon","href":"/icon1.png?eddb2306776d44cb","type":"image/png","sizes":"16x16"}],["$","link","6",{"rel":"icon","href":"/icon2.png?102f74894260c2df","type":"image/png","sizes":"32x32"}],["$","link","7",{"rel":"apple-touch-icon","href":"/apple-icon.png?21245fa937cee9a5","type":"image/png","sizes":"180x180"}],["$","meta","8",{"name":"next-size-adjust"}]]
a:null
